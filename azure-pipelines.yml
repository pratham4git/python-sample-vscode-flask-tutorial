# Sample Azure DevOps pipeline for a Python project
# Runs on self-hosted Linux agent in Default pool

pool: Default

steps:
  # Verify Python version
  - script: |
      python3.12 --version
      python3.12 -m pip --version
    displayName: 'Verify Python 3.12 Installation'

  # Create and activate virtual environment, then install dependencies
  - script: |
      python3.12 -m venv venv
      source venv/bin/activate
      python3.12 -m pip install --upgrade pip
      python3.12 -m pip install -r requirements.txt
    displayName: 'Install Dependencies'

  # Run flake8 for code linting in virtual environment
  - script: |
      source venv/bin/activate
      python3.12 -m pip install flake8
      python3.12 -m flake8 .
    displayName: 'Run Linting with Flake8'

  # Run pytest for unit tests in virtual environment
  - script: |
      source venv/bin/activate
      python3.12 -m pip install pytest
      python3.12 -m pytest tests/ --junitxml=test-results.xml
    displayName: 'Run Unit Tests with Pytest'

  # Publish test results
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
      testRunTitle: 'Python Unit Tests'
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'

  # Publish build artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)'
      artifactName: 'python-app'
      publishLocation: 'Container'
    displayName: 'Publish Build Artifacts'